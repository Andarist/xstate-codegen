// This file is auto-generated by a CLI tool
// Ask @mattpocock about it

import { useMachine } from '@xstate/react';
import {
  StateMachine,
  AnyEventObject,
  EventObject,
  State,
  Interpreter,
} from 'xstate';

export type LightMachineStateMatches =
  | 'green'
  | 'yellow'
  | 'red'
  | 'red.walk'
  | 'red.wait'
  | 'red.stop';

export interface LightMachineOptions<
  Context = any,
  Event extends EventObject = AnyEventObject
> {
  context?: Partial<Context>;
  guards: {
    hasCompleted: (
      context: Context,
      event: Extract<Event, { type: 'PED_COUNTDOWN' }>,
    ) => boolean;
  };
  devTools?: boolean;
}

export type LightMachineState<Context, Event extends EventObject> = Omit<
  State<Context, Event>,
  'matches'
> & {
  matches: (match: LightMachineStateMatches) => boolean;
};

export const useLightMachine = <
  Context = any,
  StateSchema = any,
  Event extends EventObject = AnyEventObject
>(
  machine: StateMachine<Context, StateSchema, Event>,
  options: LightMachineOptions<Context, Event>,
): [
  LightMachineState<Context, Event>,
  Interpreter<Context, StateSchema, Event>['send'],
  Interpreter<Context, StateSchema, Event>,
] => {
  return useMachine(machine as any, options as any) as any;
};
